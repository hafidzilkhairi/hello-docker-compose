{"version":3,"sources":["FormEdit.jsx","ModalTambah.js","App.js","serviceWorker.js","index.js"],"names":["FormEdit","props","useState","nama","email","nomor","alamat","values","setValues","useEffect","id","data","handleChange","name","event","target","value","deleteHandle","a","Axios","delete","_id","refreshHalaman","saveHandle","patch","Box","style","flex","TextField","label","margin","onChange","display","justifyContent","Button","onClick","color","ModalTambah","React","open","setOpen","handleClose","handleSend","post","headers","AddBox","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","position","top","left","transform","padding","boxSizing","flexDirection","width","paddingTop","App","dataP","setDataP","setData","isLoading","setIsLoading","axios","get","response","dataBaru","getData","backgroundColor","height","alignItems","Typography","component","Divider","overflow","Table","TableHead","TableRow","TableCell","textAlign","TableBody","map","dataSingle","i","cursor","hover","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39b9bd55.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport Axios from 'axios';\n\nexport default function FormEdit(props) {\n  const [values, setValues] = useState({\n    nama: '',\n    email: '',\n    nomor: '',\n    alamat: '',\n  });\n\n  useEffect(() => {\n    if(props.id != null){\n      setValues(props.data[props.id]);\n    }\n  }, [props.id, props.data])\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const deleteHandle = async () => {\n    if(props.id != null){\n      await Axios.delete('http://localhost:8000/api/karyawan', {\n        data: {\n          '_id' : values._id\n        }\n      });\n      setValues({\n        nama: '',\n        email: '',\n        nomor: '',\n        alamat: '',\n      });\n      props.refreshHalaman();\n    }\n  }\n\n  const cancelHandle = () => {\n    setValues({\n      nama: '',\n      email: '',\n      nomor: '',\n      alamat: '',\n    });\n  }\n\n  const saveHandle = async () => {\n    if (props.id != null) {\n      await Axios.patch('http://localhost:8000/api/karyawan', {\n        \"_id\": values._id,\n        \"nama\": values.nama,\n        \"email\": values.email,\n        \"nomor\": values.nomor,\n        \"alamat\": values.alamat,\n      })\n      setValues({\n        nama: '',\n        email: '',\n        nomor: '',\n        alamat: '',\n      });\n      props.refreshHalaman();\n    }\n  }\n\n\n  return (\n    <Box style={props.style}>\n      <Box style={{ flex: 1 }}>\n        <TextField\n          id=\"standard-name\"\n          label=\"Nama\"\n          value={values.nama}\n          margin=\"normal\"\n          onChange={handleChange('nama')}\n        />\n        <TextField\n          id=\"standard-name\"\n          label=\"Email\"\n          value={values.email}\n          margin=\"normal\"\n          onChange={handleChange('email')}\n        />\n        <TextField\n          id=\"standard-name\"\n          label=\"Nomor Telepon\"\n          value={values.nomor}\n          margin=\"normal\"\n          onChange={handleChange('nomor')}\n        />\n        <TextField\n          id=\"standard-name\"\n          label=\"Alamat\"\n          value={values.alamat}\n          margin=\"normal\"\n          onChange={handleChange('alamat')}\n        />\n      </Box>\n      <Box style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button onClick={cancelHandle} >Cancel</Button>\n        <Button onClick={deleteHandle} style={{ color: '#E10050' }} >Delete</Button>\n        <Button onClick={saveHandle} style={{ color: '#2196F3' }} >Save</Button>\n      </Box>\n    </Box>\n  );\n}","import React from 'react';\nimport { AddBox } from '@material-ui/icons';\nimport {\n  Box,\n  Button,\n  Modal,\n  Backdrop,\n  Fade,\n  Paper,\n  TextField,\n} from '@material-ui/core';\nimport Axios from 'axios';\n\nexport default function ModalTambah(props) {\n  const [open, setOpen] = React.useState(false);\n  const [values, setValues] = React.useState({\n    nama: '',\n    email: '',\n    nomor: '',\n    alamat: '',\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleSend = async () => {\n    await Axios.post('http://localhost:8000/api/karyawan', {\n      nama: values.nama,\n      email: values.email,\n      nomor: values.nomor,\n      alamat: values.alamat,\n    }, {headers: {\n      'Content-Type': 'application/json'\n    }})\n    // setOpen(false);\n    props.refreshHalaman()\n    setValues({\n      nama: '',\n      email: '',\n      nomor: '',\n      alamat: '',\n    });\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button onClick={handleOpen} ><AddBox style={{ color: 'white' }} /></Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Paper \n            style={{ \n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              padding: '18px',\n              boxSizing: 'border-box',\n              display: 'flex',\n              flexDirection: 'column',\n              width: '300px',\n            }}\n          >\n            <h2 id=\"transition-modal-title\">Tambah Karyawan</h2>\n            <TextField\n              label=\"Nama\"\n              value={values.nama}\n              margin=\"normal\"\n              onChange={handleChange('nama')}\n            />\n            <TextField\n              label=\"Email\"\n              value={values.email}\n              margin=\"normal\"\n              onChange={handleChange('email')}\n            />\n            <TextField\n              label=\"Nomor Telepon\"\n              value={values.nomor}\n              margin=\"normal\"\n              onChange={handleChange('nomor')}\n            />\n            <TextField\n              label=\"Alamat\"\n              value={values.alamat}\n              margin=\"normal\"\n              onChange={handleChange('alamat')}\n            />\n            <Box style={{ display: 'flex', justifyContent: 'flex-end', paddingTop: '10px' }}>\n              <Button onClick={handleClose} >Cancel</Button>\n              <Button onClick={handleSend} style={{ color: '#2196F3' }} >Tambah</Button>\n            </Box>\n          </Paper>\n        </Fade>\n      </Modal>\n    </Box>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  Divider,\n} from '@material-ui/core';\nimport FormEdit from './FormEdit';\n// import data from './data';\nimport ModalTambah from './ModalTambah';\nimport axios from 'axios';\n\nfunction App() {\n  const [dataP, setDataP] = useState(null);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  async function getData() {\n    const response = await axios.get(\"http://localhost:8000/api/karyawan\");\n    setIsLoading(false);\n    setData(response.data.data !== null ? response.data.data : []);\n  }\n\n  useEffect(() => {\n    if(isLoading){\n      getData();\n    }\n  }, [data, isLoading]);\n\n  function handleClick(id){\n    setDataP(id)\n  }\n\n  async function refreshHalaman(){\n    const response = await axios.get(\"http://localhost:8000/api/karyawan\");\n    const dataBaru = response.data.data;\n    setDataP(null);\n    setData(dataBaru !== null ? dataBaru : []);\n  }\n\n  return (\n    <Box style={{ backgroundColor: '#f4f4f4', height: '100vh', width: '100vw' }}>\n      <Paper style={{ height: '600px', width: '80%', position: 'absolute', transform: 'translate(-50%, -50%)', top: '50%', left: '50%', display: 'flex', flexDirection: 'column' }}>\n        <Box style={{ backgroundColor: '#2354c8', width: '100%', padding: '15px', boxSizing: 'border-box', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography style={{ color: 'white' }} component=\"h1\">Daftar Karyawan</Typography>\n          <ModalTambah refreshHalaman={refreshHalaman} />\n        </Box>\n        <Box style={{ flex: '1', display: 'flex' }}>\n          <Box style={{ width: '300px' }}>\n            <Paper style={{ width: '100%', height: '100%', padding: '20px', boxSizing: 'border-box', display: 'flex', flexDirection: 'column' }}>\n              <Typography>Edit Informasi Karyawan</Typography>\n              <Divider style={{ margin: '12px 0 20px' }} />\n              <FormEdit refreshHalaman={refreshHalaman} data={data} id={dataP} style={{ width: '100%', flex: 1, display: 'flex', flexDirection: 'column' }} />\n            </Paper>\n          </Box>\n          <Box style={{ flex: 1, overflow: 'scroll' }} >\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell style={{ textAlign: 'center' }}>Nama</TableCell>\n                  <TableCell style={{ textAlign: 'center' }}>Email</TableCell>\n                  <TableCell style={{ textAlign: 'center' }}>Nomor Telepon</TableCell>\n                  <TableCell style={{ textAlign: 'center' }}>Alamat</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  data\n                  .map((dataSingle, i) => \n                  (\n                    <TableRow style={{ cursor: 'pointer' }} hover onClick={() => {handleClick(i)}} key={i}>\n                        <TableCell>{dataSingle.nama}</TableCell>\n                        <TableCell>{dataSingle.email}</TableCell>\n                        <TableCell>{dataSingle.nomor}</TableCell>\n                        <TableCell>{dataSingle.alamat}</TableCell>\n                      </TableRow>\n                    )\n                  )\n                }\n              </TableBody>\n            </Table>\n          </Box>\n        </Box>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}